/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasikelompokimk;

import databases.*;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adam
 */
public class Halaman_Mahasiswa_Aktif extends javax.swing.JFrame {

    /**
     * Creates new form Halaman_Mahasiswa_Aktif
     */
    int q, i, deleteitem;
    String id;

    public Halaman_Mahasiswa_Aktif() {
        initComponents();
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        showtabel = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        hapusbtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        pnlTop = new javax.swing.JPanel();
        pnlActions = new javax.swing.JPanel();
        lblMinimize = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        showtabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama pengguna", "Nama pendaftar", "Tempat lahir", "Tanggal lahir", "Jenis kelamin", "Kewarganegaraan", "Agama", "NIK", "Email", "No telpon", "Pendidikan Terakhir", "Nama sekolah", "Kode pos", "Program studi ", "Provinsi", "Alamat", "Kecamatan", "Kabupaten", "Password", "NIM", "Keaktifan", "Semester"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showtabel.setRowHeight(25);
        showtabel.setShowGrid(true);
        showtabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showtabelMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(showtabel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 4097, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        editbtn.setText("Perbarui");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        hapusbtn.setText("Hapus");
        hapusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusbtnActionPerformed(evt);
            }
        });

        jButton4.setText("kosong");

        jButton5.setText("Segarkan");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        pnlTop.setBackground(new java.awt.Color(50, 27, 140));
        pnlTop.setPreferredSize(new java.awt.Dimension(1024, 30));
        pnlTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlTopMouseDragged(evt);
            }
        });
        pnlTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTopMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlTopMousePressed(evt);
            }
        });
        pnlTop.setLayout(new java.awt.BorderLayout());

        pnlActions.setBackground(new java.awt.Color(50, 27, 140));
        pnlActions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home20/images/icons8_minus_18px_1.png"))); // NOI18N
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblMinimizeMousePressed(evt);
            }
        });
        pnlActions.add(lblMinimize);

        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home20/images/icons8_multiply_18px_1.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCloseMousePressed(evt);
            }
        });
        pnlActions.add(lblClose);

        pnlTop.add(pnlActions, java.awt.BorderLayout.LINE_END);

        pnlTitle.setBackground(new java.awt.Color(50, 27, 140));
        pnlTitle.setPreferredSize(new java.awt.Dimension(200, 30));
        pnlTitle.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 8));

        lblTitle.setForeground(new java.awt.Color(204, 204, 204));
        lblTitle.setText("Admin ");
        pnlTitle.add(lblTitle);

        pnlTop.add(pnlTitle, java.awt.BorderLayout.LINE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 468, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(hapusbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hapusbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
int xy, xx;
    private void showtabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showtabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_showtabelMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Pilihan_admin utama = new Pilihan_admin();
        utama.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hapusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel;
        tableModel = (DefaultTableModel) showtabel.getModel();
        int selekbaris = showtabel.getSelectedRow();
        try {
            id = (tableModel.getValueAt(selekbaris, 0).toString());
            deleteitem = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus?", "Peringatan", JOptionPane.YES_NO_OPTION);
            if (deleteitem == JOptionPane.YES_OPTION) {
                Connection conn = (Connection) DBConnection.connectDatabase();
                PreparedStatement pst = conn.prepareStatement("DELETE from Tabel_Data_mahasiswa where usernameid=?");
                pst.setString(1, id);
                pst.executeUpdate();

            }
        } catch (SQLException ex) {
            Logger.getLogger(HalamanDaftar.class.getName()).log(Level.SEVERE, null, ex);

        }

    }//GEN-LAST:event_hapusbtnActionPerformed

    public boolean checkUser(String userName) {

        PreparedStatement PreparedStatement;
        ResultSet ResultSet;
        boolean userExist = false;

        String query = "SELECT * FROM `NIM` WHERE `nim` = ?";

        try {
            Connection conn = (Connection) databaselaporan.connectDatabaseLaporan();
            PreparedStatement = conn.prepareStatement(query);
            PreparedStatement.setString(1, userName);
            ResultSet = PreparedStatement.executeQuery();

            if (ResultSet.next()) {
                userExist = true;
            }

        } catch (SQLException ex) {
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }

        return userExist;

    }

    public boolean checkUser2(String userName) {

        PreparedStatement PreparedStatement;
        ResultSet ResultSet;
        boolean userExist = false;

        String query = "SELECT * FROM `satu` WHERE `nim` = ?";

        try {
            Connection conn = (Connection) databaselaporan.connectDatabaseLaporan();
            PreparedStatement = conn.prepareStatement(query);
            PreparedStatement.setString(1, userName);
            ResultSet = PreparedStatement.executeQuery();

            if (ResultSet.next()) {
                userExist = true;
            }

        } catch (SQLException ex) {
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }

        return userExist;

    }

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tabelmodel = (DefaultTableModel) showtabel.getModel();
        if (tabelmodel.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Tabel kosong");
        } else {
            String usernameid, Namapendaftar, Tempatlahir, Tanggallahir, Jeniskelamin, Kewarganegaraan, Agama, NIK, Email, Notelpon, PendidikanTerakhir, Namasekolah, Kodepos, Programstudi1, Programstudi2, Provinsi, Alamat, Kecamatan, Kabupaten, password, nim, aktif, semester;
            try {
                Connection conn = (Connection) DBConnection.connectDatabase();
                int selekbaris = showtabel.getSelectedRow();
                usernameid = tabelmodel.getValueAt(selekbaris, 0).toString();
                Namapendaftar = tabelmodel.getValueAt(selekbaris, 1).toString();

                Tempatlahir = tabelmodel.getValueAt(selekbaris, 2).toString();
                Tanggallahir = tabelmodel.getValueAt(selekbaris, 3).toString();
                Jeniskelamin = tabelmodel.getValueAt(selekbaris, 4).toString();
                Kewarganegaraan = tabelmodel.getValueAt(selekbaris, 5).toString();
                Agama = tabelmodel.getValueAt(selekbaris, 6).toString();
                NIK = tabelmodel.getValueAt(selekbaris, 7).toString();
                Email = tabelmodel.getValueAt(selekbaris, 8).toString();
                Notelpon = tabelmodel.getValueAt(selekbaris, 9).toString();
                PendidikanTerakhir = tabelmodel.getValueAt(selekbaris, 10).toString();
                Namasekolah = tabelmodel.getValueAt(selekbaris, 11).toString();
                Kodepos = tabelmodel.getValueAt(selekbaris, 12).toString();
                Programstudi1 = tabelmodel.getValueAt(selekbaris, 13).toString();

                Provinsi = tabelmodel.getValueAt(selekbaris, 14).toString();
                Alamat = tabelmodel.getValueAt(selekbaris, 15).toString();
                Kecamatan = tabelmodel.getValueAt(selekbaris, 16).toString();
                Kabupaten = tabelmodel.getValueAt(selekbaris, 17).toString();
                password = tabelmodel.getValueAt(selekbaris, 18).toString();
                nim = tabelmodel.getValueAt(selekbaris, 19).toString();
                aktif = tabelmodel.getValueAt(selekbaris, 20).toString();
                semester = tabelmodel.getValueAt(selekbaris, 21).toString();
                String sql = "UPDATE Tabel_Data_mahasiswa set Nama=?, Tempat_lahir = ?, Tanggal_lahir = ?, Jenis_kelamin = ?, Kewarganegaraan = ?, Agama = ?, NIK = ?, Email = ?, No_telpon = ?, Pendidikan_Terakhir = ?, Nama_sekolah = ?, Kode_pos = ?,  Program_study_2 = ?, Provinsi = ?, Alamat = ?, Kecamatan = ?, kabupaten = ?,password = ?,NIM =?,Aktif=?,semester=? where usernameid = ?";

                PreparedStatement prepare = conn.prepareStatement(sql);

                prepare.setString(1, Namapendaftar);
                prepare.setString(2, Tempatlahir);
                prepare.setString(3, Tanggallahir);
                prepare.setString(4, Jeniskelamin);
                prepare.setString(5, Kewarganegaraan);
                prepare.setString(6, Agama);
                prepare.setString(7, NIK);
                prepare.setString(8, Email);
                prepare.setString(9, Notelpon);
                prepare.setString(10, PendidikanTerakhir);
                prepare.setString(11, Namasekolah);
                prepare.setString(12, Kodepos);
                prepare.setString(13, Programstudi1);

                prepare.setString(14, Provinsi);
                prepare.setString(15, Alamat);
                prepare.setString(16, Kecamatan);
                prepare.setString(17, Kabupaten);
                prepare.setString(18, password);
                prepare.setString(19, nim);
                prepare.setString(20, aktif);
                prepare.setString(21, semester);
                prepare.setString(22, usernameid);
                // exequte query
                prepare.executeUpdate();

                // pengiriman kedua
                if (!checkUser(nim)) {
                    Connection conn2 = (Connection) databaselaporan.connectDatabaseLaporan();
                    String sql2 = "insert into NIM (nim) VALUES(?)";
                    PreparedStatement prepare2 = conn2.prepareStatement(sql2);
                    prepare2.setString(1, nim);

                    prepare2.execute();

                } else {
                    JOptionPane.showMessageDialog(null, "nim telah ada pada mata kuliah", "Username gagal", 2);
                }
                // simpan ke satu
                if (!checkUser2(nim)) {
                    String sql1 = "INSERT INTO satu (nim) VALUES(?)";
                    PreparedStatement prepare1 = databaselaporan.connectDatabaseLaporan().prepareStatement(sql1);
                    prepare1.setString(1, nim);
                    prepare1.execute();
                } else {
                    JOptionPane.showMessageDialog(null, "nim telah ada pada penilaian", "Username gagal", 2);
                }

            } catch (Exception e) {
//                JOptionPane.showMessageDialog(null, "Data ada yang belum di isi", "Eror data", 2);
                System.out.println(e);
            }
        }

    }//GEN-LAST:event_editbtnActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tabelmodel = (DefaultTableModel) showtabel.getModel();
        tabelmodel.setRowCount(0);
        showTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void lblMinimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMousePressed
        Halaman_Mahasiswa_Aktif.this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_lblMinimizeMousePressed

    private void lblCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMousePressed
        System.exit(0);
    }//GEN-LAST:event_lblCloseMousePressed

    private void pnlTopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_pnlTopMouseDragged

    private void pnlTopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            if (Halaman_Mahasiswa_Aktif.this.getExtendedState() == MAXIMIZED_BOTH) {
                Halaman_Mahasiswa_Aktif.this.setExtendedState(JFrame.NORMAL);
            } else {
                Halaman_Mahasiswa_Aktif.this.setExtendedState(MAXIMIZED_BOTH);
            }
        }
    }//GEN-LAST:event_pnlTopMouseClicked

    private void pnlTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_pnlTopMousePressed

    public void showTable() {
        try {
            Statement stat = (Statement) DBConnection.connectDatabase().createStatement();
            String sql = "select * from Tabel_Data_mahasiswa";
            ResultSet rs = stat.executeQuery(sql);
            DefaultTableModel tableModel;
            tableModel = (DefaultTableModel) showtabel.getModel();
            while (rs.next()) {
                tableModel.addRow((new Object[]{
                    rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6),
                    rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13),
                    rs.getString(14), rs.getString(15), rs.getString(16), rs.getString(17), rs.getString(18), rs.getString(19), rs.getString(20), rs.getString(21), rs.getString(22)
                }));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Cekdata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Halaman_Mahasiswa_Aktif.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Halaman_Mahasiswa_Aktif.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Halaman_Mahasiswa_Aktif.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Halaman_Mahasiswa_Aktif.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Halaman_Mahasiswa_Aktif().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editbtn;
    private javax.swing.JButton hapusbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlActions;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JPanel pnlTop;
    public javax.swing.JTable showtabel;
    // End of variables declaration//GEN-END:variables
}
